{
  "name": "pullstream",
  "version": "0.0.4",
  "description": "A stream you can pull data from.",
  "main": "pullstream.js",
  "scripts": {
    "test": "./node_modules/.bin/nodeunit ./test/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/nearinfinity/node-pullstream/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/nearinfinity/node-pullstream.git"
  },
  "keywords": [
    "stream",
    "pull"
  ],
  "devDependencies": {
    "nodeunit": "~0.7.4"
  },
  "dependencies": {
    "over": "~0.0.5",
    "stream-buffers": "~0.2.3"
  },
  "readme": "pullstream\n==========\n\nTired of getting a firehose worth of data from your streams. This module is here to save the day. PullStream allows\nyou to pull data when you want and as much as you want.\n\n## Quick Examples\n\n```javascript\nvar PullStream = require('pullstream');\nvar fs = require('fs');\n\nvar ps = new PullStream();\nvar loremIpsumStream = fs.createReadStream('loremIpsum.txt');\nvar outputStream = fs.createWriteStream(path.join(__dirname, 'loremIpsum.out'));\n\nloremIpsumStream.pipe(ps);\n\n// pull 5 bytes\nps.pull(5, function(err, data) {\n  console.log(data.toString('utf8'));\n\n  // pipe the next 100 to a file\n  ps.pipe(100, outputStream).on('end', function () {\n    console.log('all done');\n  });\n});\n```\n\n# API Index\n\n## PullStream\n * [pull](#pullStreamPull)\n * [pipe](#pullStreamPipe)\n * [write](#pullStreamWrite)\n * [end](#pullStreamEnd)\n\n# API Documentation\n\n<a name=\"pullStream\"/>\n## PullStream\n\n<a name=\"pullStreamPull\" />\n### ps.pull([number], callback)\n\nCalls a callback when the specified number of bytes are ready. If no number is specified pull will read until the end\nof the input stream.\n\n__Arguments__\n\n* number (optional) - Number of bytes to wait for. If not specified reads to the end of input stream.\n* callback(err, data) - Callback called when the bytes are ready. data is a buffer containing the bytes.\n\n__Example__\n\n```javascript\nvar ps = new PullStream();\n\nps.pull(5, function(err, data) {\n  console.log(data.toString('utf8'));\n});\n```\n\n<a name=\"pullStreamPipe\" />\n### ps.pipe([number], destStream)\n\nPipes the specified number of bytes to destStream. If a number is not specified pipe will pipe the remainder\nof the input stream to destStream.\n\n__Arguments__\n\n* number (optional) - Number of bytes to pipe. If not specified pipe the rest of input stream.\n* destStream - The stream to pipe data to.\n\n__Returns__\n\nReturns destStream.\n\n__Example__\n\n```javascript\nvar ps = new PullStream();\nvar outputStream = fs.createWriteStream(path.join(__dirname, 'loremIpsum.out'));\n\nps.pipe(100, out).on('end', function() {\n  console.log('done with pipe');\n});\n```\n\n<a name=\"pullStreamWrite\" />\n### ps.write(data)\n\nWrites data to input side of a pull stream.\n\n__Arguments__\n\n* data - Buffer to write to the input side of the pull stream.\n\n__Example__\n\n```javascript\nvar ps = new PullStream();\n\nps.pull(5, function(err, data) {\n  console.log(data.toString('utf8'));\n});\n\nps.write(new Buffer('Hello World', 'utf8'));\n```\n\n<a name=\"pullStreamEnd\" />\n### ps.end()\n\nManually ends a pull stream.\n\n__Example__\n\n```javascript\nvar ps = new PullStream();\n\nps.pull(5, function(err, data) {\n  console.log(data.toString('utf8'));\n});\n\nps.write(new Buffer('Hello World', 'utf8'));\nps.end();\n```\n",
  "_id": "pullstream@0.0.4",
  "dist": {
    "shasum": "bdfe17952a48f71184802f4cdedead9674b4d1d6"
  },
  "_from": "pullstream@0.0.4"
}
